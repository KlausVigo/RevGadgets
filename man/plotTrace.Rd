% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plotTrace.R
\name{plotTrace}
\alias{plotTrace}
\title{Plot trace}
\usage{
plotTrace(trace, vars = NULL, match = NULL)
}
\arguments{
\item{trace}{(list of data frames; no default) Name of a list of data frames,
such as produced by readTrace(). If the readTrace() output
contains multiple traces (such as from multiple runs), summarizeTrace() will provide
summaries for each trace individually, as well as the combined trace.}

\item{vars}{(character or character vector; NULL) The specific name(s) of the variable(s)
to be summarized.}

\item{match}{(character; NULL) A string to match to a group of parameters. For example,
match = "er" will plot the variables "er[1]", "er[2]", "er[3]", etc.. match
will only work if your search string is followed by brackets in one or more of
 the column names of the provided trace file. match = "er" will only return the
 exchangeability parameters, but will not plot "Posterior".}
}
\value{
plotTrace() returns a list of the length of provided trace object, plus one
combined trace. Each element of the list contains a ggplot object with plots of
the provided parameters. These plots may be modified in typical ggplot fashion.
}
\description{
Plots the posterior distributions of variables from trace file.
}
\details{
Plots the posterior distributions of continuous variables from one or
multiple traces (as in, from multiple runs). If multiple traces are provided,
plotTrace() will plot each run independently as well as plot the combined output.
When multiple variables are listed, the default behavior is to overlay
the variables, unless the user specifies combine = FALSE. Note that for variables
with very different distributions, overlaying the plots may result in illegible
figures. In these cases, we recommend combine = FALSE.
}
\examples{

\dontrun{

file <- system.file("extdata",
    "sub_models/primates_cytb_covariotide.p", package="RevGadgets")
one_trace <- readTrace(path = file)
plots <- plotTrace(trace = one_trace,
                    vars = c("pi[1]","pi[2]","pi[3]","pi[4]"))
plots[[1]]
# add custom colors
plots[[1]] + scale_fill_manual(values = c("green","red","blue","orange"))

# make the same plot, using match

plots <- plotTrace(trace = one_trace, match = "pi")

}

}
